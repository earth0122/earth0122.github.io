@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Index";

    List<Employee> employees = (List<Employee>)Model;
    string jsonEmployees = Newtonsoft.Json.JsonConvert.SerializeObject(employees);
}

@section topCSS{
    <style type="text/css">
        /*設定Table欄位標題顏色*/
        th {
            color: white;
            background-color: black !important;
            text-align: center;
        }
    </style>
}

@section endJS{
    <script type="text/javascript">
        function alertName(name) {
            alert("你的名字是 :" + name);
        }
    </script>
}

<div class="h-100 p-3 text-white bg-success rounded-3 mb-4">
    <h2>員工基本資料</h2>
</div>
<p></p>
<table class="table table-bordered table-striped table-hover align-middle">
    <thead>
        <tr>
            <th>
                <i class="fa fa-bars"></i>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                <i class="fa fa-user"></i>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                <i class="fa fa-mobile"></i>
                @Html.DisplayNameFor(model => model.Mobile)
            </th>
            <th>
                <i class="fa fa-envelope-square"></i>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                <i class="fa fa-home"></i>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                <i class="fa fa-address-book"></i>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mobile)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">編輯</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success">明細</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">刪除</a>
                    <button onclick="alertName('@item.Name')" class="btn btn-warning">Alert</button>
                    <button onclick="showModal(@item.Id)" class="btn btn-info">Modal</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<p>
    <a asp-action="Create" class="btn btn-warning">新增員工資料</a>
</p>

<div class="modal" tabindex="-1" role="dialog" id="myModal2">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header text-white bg-info">
                <h5 class="modal-title" id="modalTitle">Modal Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">       
                </button>
            </div>
            <div class="modal-body">
                <p id="modalBodyText">Modal Body Text.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">儲存</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        //將JSON字串轉JS Array
        const employees = @Html.Raw(jsonEmployees);

        //Array.prototype.filter() -- https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
        //Array.prototype.find() -- https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/find

        function showModal(id) {
            //過濾element.Id == id, 以陣列方式回傳符合物件
            let emp = employees.filter(function (el) { return el.Id == id; })[0];
            console.log(emp);

            let name = emp.Name;
            let mobile = emp.Mobile;
            let email = emp.Email;
            let department = emp.Department;
            let title = emp.Title;
            let data = `${mobile}, ${email}, ${department}, ${title}`;

            //設定Modal標題及內容資料
            document.getElementById("modalTitle").innerText = `員工編號 : ${id}, ${title}`;
            document.getElementById("modalBodyText").innerText = data;

            //以JS觸發Modal
            var myModal = new bootstrap.Modal(document.getElementById("myModal2"), {
                keyboard: false
            })

            myModal.show();
        }
    </script>
}